{
	"info": {
		"_postman_id": "639f2ccc-b5a7-41a7-baa7-2805d214aa43",
		"name": "HTTP-Server-Rust",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23250844"
	},
	"item": [
		{
			"name": "GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the content type is 'text/html'\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Presence of <h1> tag in the response body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"</h1>\")\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:7878",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "7878",
					"query": [
						{
							"key": "email",
							"value": "leo@gmail.com",
							"disabled": true
						},
						{
							"key": "password",
							"value": "123",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the content type is 'text/html'\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Presence of <h1> tag in the response body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"</h1>\")\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:7878",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "7878",
					"query": [
						{
							"key": "email",
							"value": "leo@gmail.com",
							"disabled": true
						},
						{
							"key": "password",
							"value": "123",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the content type is 'text/html'\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Presence of <h1> tag in the response body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"</h1>\")\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:7878",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "7878",
					"query": [
						{
							"key": "email",
							"value": "leo@gmail.com",
							"disabled": true
						},
						{
							"key": "password",
							"value": "123",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the content type is 'text/html'\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Presence of <h1> tag in the response body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"</h1>\")\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:7878",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "7878",
					"query": [
						{
							"key": "email",
							"value": "leo@gmail.com",
							"disabled": true
						},
						{
							"key": "password",
							"value": "123",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cookies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test to check if the response contains a Set-Cookie header\r",
							"pm.test(\"Valid Set-Cookie header is present\", function() {\r",
							"  pm.expect(pm.response.headers.has('Set-Cookie')).to.be.true;\r",
							"});\r",
							"\r",
							"// Test to check if the session cookie is set to a valid value\r",
							"pm.test(\"Session cookie is set to a valid value\", function () {\r",
							"    var sessionCookie = pm.cookies.get('session_id');\r",
							"    pm.expect(sessionCookie).to.exist.and.to.be.a('string'); // Fixed the syntax for string type\r",
							"});\r",
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Content-Type is 'text/html'\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/html');\r",
							"});\r",
							"\r",
							"pm.test(\"LoginForm and logoutButton elements are present\", function () {\r",
							"    const responseData = pm.response.text();\r",
							"\r",
							"    pm.expect(responseData).to.include('id=\"loginForm\"');\r",
							"    pm.expect(responseData).to.include('id=\"logoutButton\"');\r",
							"});\r",
							"\r",
							"pm.test(\"Presence of email and password input fields in the login form\", function () {\r",
							"    const responseData = pm.response.text();\r",
							"\r",
							"    pm.expect(responseData).to.include('<input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Correo electrónico\" required>');\r",
							"    pm.expect(responseData).to.include('<input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Contraseña\" required>');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:7878/login",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "7878",
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	]
}